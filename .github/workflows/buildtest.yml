name: "Build & Test"

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  build:
    strategy:
      matrix:
        os: [[ubuntu-latest], [macos-latest], [self-hosted, macOS]]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v19
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v12
      with:
        name: devenv
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: |
        nix profile remove '.*'
        nix profile install .
    - name: Run tests
      run: |
        devenv ci
        devenv shell devenv-run-tests
  generate-examples:
    runs-on: ubuntu-latest
    outputs:
      examples: ${{ steps.set-examples.outputs.examples }}
    steps:
    - name: Checkout base repo
      uses: actions/checkout@v3
    - id: set-examples
      run: |
        json=$(tree -J -L 1 examples | jq -c '[.[0].contents[] | .name]')
        echo "examples=$json" >> $GITHUB_OUTPUT
  examples:
    name: example ${{ matrix.example }} (${{ join(matrix.os) }})
    needs: [generate-examples]
    strategy:
      matrix:
        os: [[ubuntu-latest], [macos-latest], [self-hosted, macOS]]
        example: ${{ fromJSON(needs.generate-examples.outputs.examples) }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v19
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v12
      with:
        name: devenv
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: |
        nix profile remove '.*'
        nix profile install .
    - run: devenv shell devenv-test-example ${{ matrix.example }}
  direnv:
    name: direnv (${{ join(matrix.os) }})
    strategy:
      matrix:
        os: [[ubuntu-latest], [macos-latest], [self-hosted, macOS]]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v19
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v12
      with:
        name: devenv
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: |
        nix profile remove '.*'
        nix profile install . 'nixpkgs#direnv'
        mkdir -p ~/.config/direnv/
        cat > ~/.config/direnv/direnv.toml << 'EOF'
        [global]
        strict_env = true
        EOF
        direnv allow ./examples/simple
        direnv exec ./examples/simple true

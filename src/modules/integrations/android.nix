{ pkgs, config, lib, ... }:

let
  cfg = config.android;

  android = {
    platforms = [ "34" ];
    systemImageTypes = [ "google_apis" ];
    abis = [ "arm64-v8a" "x86_64" ];
  };

  androidEnv = pkgs.callPackage "${pkgs.path}/pkgs/development/mobile/androidenv" {
    inherit config pkgs;
    licenseAccepted = true;
  };

  sdkArgs = {
    platformVersions = android.platforms;
    abiVersions = android.abis;
    systemImageTypes = android.systemImageTypes;

    includeSystemImages = true;
    includeEmulator = true;
    includeNDK = true;
    emulatorVersion = "33.1.6";

    # Accepting more licenses declaratively:
    extraLicenses = [
      # Already accepted for you with the global accept_license = true or
      # licenseAccepted = true on androidenv.
      # "android-sdk-license"

      # These aren't, but are useful for more uncommon setups.
      "android-sdk-preview-license"
      "android-googletv-license"
      "android-sdk-arm-dbt-license"
      "google-gdk-license"
      "intel-android-extra-license"
      "intel-android-sysimage-license"
      "mips-android-sysimage-license"
    ];
  };

  androidComposition = androidEnv.composeAndroidPackages sdkArgs;
  androidEmulator = androidEnv.emulateApp {
    name = "android-sdk-emulator";
    sdkExtraArgs = sdkArgs;
  };

  androidSdk = androidComposition.androidsdk;
  platformTools = androidComposition.platform-tools;
  jdk = pkgs.jdk;
in
{
  options.android = {
    enable = lib.mkEnableOption "tools for Android Development";

    package = lib.mkOption {
      type = lib.types.package;
      description = "The android packages to use";
    };
  };

  config = lib.mkIf cfg.enable {
    packages = [
      androidSdk
      platformTools
      androidEmulator
      jdk
      pkgs.android-studio
    ];

    #env.ANDROID_HOME = "${androidSdk}";
    env.ANDROID_HOME = "${androidSdk}/libexec/android-sdk";
    #env.ANDROID_HOME = "${androidSdk}/share/android-sdk";
    env.ANDROID_NDK_ROOT = "${config.env.ANDROID_HOME}/ndk/";
    env.GRADLE_OPTS = "-Dorg.gradle.project.android.aapt2FromMavenOverride=${androidSdk}/share/android-sdk/build-tools/34.0.0/aapt2";
    # override the aapt2 binary that gradle uses with the patched one from the sdk
    enterShell = ''
       set -v
       export PATH $PATH:${config.env.ANDROID_HOME}/tools:${config.env.ANDROID_HOME}/tools/bin:${config.env.ANDROID_HOME}/platform-tools
       # Write out local.properties for Android Studio.
       cat <<EOF > local.properties
       # This file was automatically generated by nix-shell.
       sdk.dir=$ANDROID_HOME
       ndk.dir=$ANDROID_NDK_ROOT
       ANDROID_USER_HOME=$(pwd)/.android
       ANDROID_AVD_HOME=$(pwd)/.android/avd

      export ANDROID_USER_HOME
      export ANDROID_AVD_HOME
       EOF
    '';
  };
}

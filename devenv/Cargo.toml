[package]
name = "devenv"
version.workspace = true
edition.workspace = true
license.workspace = true

# Make `cargo run` default to the devenv CLI
default-run = "devenv"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
devenv-eval-cache.workspace = true
devenv-tasks.workspace = true
devenv-tui.workspace = true
devenv-cache-core.workspace = true
http-client-tls.workspace = true
nix-conf-parser.workspace = true

clap.workspace = true
cli-table.workspace = true
console.workspace = true
dialoguer.workspace = true
dotlock.workspace = true
fd-lock.workspace = true
futures.workspace = true
hex.workspace = true
hostname.workspace = true
include_dir.workspace = true
indoc.workspace = true
miette.workspace = true
nix.workspace = true
regex.workspace = true
reqwest.workspace = true
schemars.workspace = true
schematic.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_yaml.workspace = true
sha2.workspace = true
blake3.workspace = true
sqlx.workspace = true
tempfile.workspace = true
tokio.workspace = true
tokio-shutdown.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
tracing-indicatif.workspace = true
indicatif.workspace = true
which.workspace = true
whoami.workspace = true
xdg.workspace = true
similar.workspace = true
once_cell.workspace = true
shell-escape.workspace = true
rmcp.workspace = true
rmcp-macros.workspace = true
async-trait.workspace = true
secretspec.workspace = true
secrecy.workspace = true

# Optional snix dependencies
snix-eval = { workspace = true, optional = true }
snix-glue = { workspace = true, optional = true }
snix-castore = { workspace = true, optional = true }
snix-store = { workspace = true, optional = true }
snix-build = { workspace = true, optional = true }
nix-compat = { workspace = true, optional = true }
nix-compat-derive = { workspace = true, optional = true }

[features]
default = []
integration-tests = []
snix = [
  "dep:nix-compat",
  "dep:nix-compat-derive",
  "dep:snix-build",
  "dep:snix-castore",
  "dep:snix-eval",
  "dep:snix-glue",
  "dep:snix-store",
]
